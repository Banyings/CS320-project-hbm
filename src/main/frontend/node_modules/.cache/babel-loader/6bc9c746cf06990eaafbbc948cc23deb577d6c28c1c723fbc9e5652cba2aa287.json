{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Booking.css';\n\n// function Booking() {\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     service: '',\n//     date: '',\n//     time: '',\n//     paymentMethod: ''\n//   });\n\n//   const [errors, setErrors] = useState({\n//     username: '',\n//     submit: ''\n//   });\n\n//   const validateEmail = (email) => {\n//     const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     return re.test(email);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!validateEmail(formData.username)) {\n//       setErrors(prev => ({\n//         ...prev,\n//         username: 'Please enter a valid email address'\n//       }));\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('/api/bookings', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData)\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.message || 'Booking failed');\n//       }\n\n//       navigate('/payment', { state: { bookingData: formData } });\n//     } catch (error) {\n//       setErrors(prev => ({\n//         ...prev,\n//         submit: error.message\n//       }));\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevData => ({\n//       ...prevData,\n//       [name]: value\n//     }));\n\n//     if (name === 'username') {\n//       setErrors(prev => ({\n//         ...prev,\n//         username: ''\n//       }));\n//     }\n//   };\n\n//   return (\n//     <div className=\"booking\">\n//       <h1>Book an Appointment</h1>\n//       <form onSubmit={handleSubmit}>\n//         {errors.submit && (\n//           <div className=\"submit-error\">\n//             {errors.submit}\n//           </div>\n//         )}\n\n//         <label>\n//           Username:\n//           <input\n//             type=\"email\"\n//             name=\"username\"\n//             placeholder=\"johndoe@gmail.com\"\n//             value={formData.username}\n//             onChange={handleInputChange}\n//             className={errors.username ? 'error' : ''}\n//             required\n//           />\n//           {errors.username && (\n//             <span className=\"error-message\">\n//               {errors.username}\n//             </span>\n//           )}\n//         </label>\n\n//         <label>\n//           Service:\n//           <select\n//             name=\"service\"\n//             value={formData.service}\n//             onChange={handleInputChange}\n//             required\n//           >\n//             <option value=\"\">Select a service</option>\n//             <option value=\"haircut\">Haircut $25</option>\n//             <option value=\"shave\">Shave $15</option>\n//             <option value=\"beard_trim\">Beard Trim $10</option>\n//             <option value=\"beard_trim & haircut\">Beard Trim & Haircut $35</option>\n//           </select>\n//         </label>\n\n//         <label>\n//           Date:\n//           <input\n//             type=\"date\"\n//             name=\"date\"\n//             value={formData.date}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </label>\n\n//         <label>\n//           Time:\n//           <input\n//             type=\"time\"\n//             name=\"time\"\n//             value={formData.time}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </label>\n\n//         <label>\n//           Payment Method:\n//           <select\n//             name=\"paymentMethod\"\n//             value={formData.paymentMethod}\n//             onChange={handleInputChange}\n//             required\n//           >\n//             <option value=\"\">Select a payment method</option>\n//             <option value=\"credit_card\">Credit Card</option>\n//             <option value=\"debit_card\">Debit Card</option>\n//             <option value=\"cash\">Cash</option>\n//             <option value=\"cash_app\">CashApp</option>\n//             <option value=\"paypal\">PayPal</option>\n//             <option value=\"venmo\">Venmo</option>\n//             <option value=\"zelle\">Zelle</option>\n//           </select>\n//         </label>\n\n//         <button type=\"submit\">Book Now</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Booking;","map":{"version":3,"names":[],"sources":["/Users/hyppolitembanyingela/CS320-project-hbm/src/main/frontend/src/Booking/Booking.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Booking.css';\r\n\r\n// function Booking() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     username: '',\r\n//     service: '',\r\n//     date: '',\r\n//     time: '',\r\n//     paymentMethod: ''\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({\r\n//     username: '',\r\n//     submit: ''\r\n//   });\r\n\r\n//   const validateEmail = (email) => {\r\n//     const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n//     return re.test(email);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!validateEmail(formData.username)) {\r\n//       setErrors(prev => ({\r\n//         ...prev,\r\n//         username: 'Please enter a valid email address'\r\n//       }));\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch('/api/bookings', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData)\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         const errorData = await response.json();\r\n//         throw new Error(errorData.message || 'Booking failed');\r\n//       }\r\n\r\n//       navigate('/payment', { state: { bookingData: formData } });\r\n//     } catch (error) {\r\n//       setErrors(prev => ({\r\n//         ...prev,\r\n//         submit: error.message\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData(prevData => ({\r\n//       ...prevData,\r\n//       [name]: value\r\n//     }));\r\n    \r\n//     if (name === 'username') {\r\n//       setErrors(prev => ({\r\n//         ...prev,\r\n//         username: ''\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"booking\">\r\n//       <h1>Book an Appointment</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {errors.submit && (\r\n//           <div className=\"submit-error\">\r\n//             {errors.submit}\r\n//           </div>\r\n//         )}\r\n        \r\n//         <label>\r\n//           Username:\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"username\"\r\n//             placeholder=\"johndoe@gmail.com\"\r\n//             value={formData.username}\r\n//             onChange={handleInputChange}\r\n//             className={errors.username ? 'error' : ''}\r\n//             required\r\n//           />\r\n//           {errors.username && (\r\n//             <span className=\"error-message\">\r\n//               {errors.username}\r\n//             </span>\r\n//           )}\r\n//         </label>\r\n\r\n//         <label>\r\n//           Service:\r\n//           <select\r\n//             name=\"service\"\r\n//             value={formData.service}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//           >\r\n//             <option value=\"\">Select a service</option>\r\n//             <option value=\"haircut\">Haircut $25</option>\r\n//             <option value=\"shave\">Shave $15</option>\r\n//             <option value=\"beard_trim\">Beard Trim $10</option>\r\n//             <option value=\"beard_trim & haircut\">Beard Trim & Haircut $35</option>\r\n//           </select>\r\n//         </label>\r\n\r\n//         <label>\r\n//           Date:\r\n//           <input\r\n//             type=\"date\"\r\n//             name=\"date\"\r\n//             value={formData.date}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//           />\r\n//         </label>\r\n\r\n//         <label>\r\n//           Time:\r\n//           <input\r\n//             type=\"time\"\r\n//             name=\"time\"\r\n//             value={formData.time}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//           />\r\n//         </label>\r\n\r\n//         <label>\r\n//           Payment Method:\r\n//           <select\r\n//             name=\"paymentMethod\"\r\n//             value={formData.paymentMethod}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//           >\r\n//             <option value=\"\">Select a payment method</option>\r\n//             <option value=\"credit_card\">Credit Card</option>\r\n//             <option value=\"debit_card\">Debit Card</option>\r\n//             <option value=\"cash\">Cash</option>\r\n//             <option value=\"cash_app\">CashApp</option>\r\n//             <option value=\"paypal\">PayPal</option>\r\n//             <option value=\"venmo\">Venmo</option>\r\n//             <option value=\"zelle\">Zelle</option>\r\n//           </select>\r\n//         </label>\r\n\r\n//         <button type=\"submit\">Book Now</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Booking;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}